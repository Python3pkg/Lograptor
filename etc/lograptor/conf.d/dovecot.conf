# "dovecot" app configuration for Lograptor

[main]
desc = Dovecot IMAP/POP daemon
tags = dovecot, deliver
files = ${logdir}/maillog*, ${logdir}/dovecot*, ${logdir}/logdir/${hostname}/%Y/%m/dovecot-%Y%m%d.log*
enabled = yes
priority = 2

[rules]
IMAP_Logins   = ": imap-login: Login: user=<(?P<user>${user})>,\sPID=(?P<thread>(?P<pid>${pid}))
                 ,\s(\S+),\srip=(?P<client>${client})"
POP3_Logins   = ": pop3-login: Login: user=<(?P<user>${user})>,\sPID=(?P<thread>(?P<pid>${pid}))
                 ,\s(\S+),\srip=(?P<client>${client})"
IMAP_Auth_Fail = ": imap-login: Disconnected \(auth failed, \d+ attempts\): user=<(?P<user>${mail})>
                  , PID=(?P<pid>${pid}), method=PLAIN, rip=(?P<rip>${client}), lip=(?P<lip>${client})"
POP3_Auth_Fail = ": pop3-login: Disconnected \(auth failed, \d+ attempts\): user=<(?P<user>${mail})>
                  , PID=(?P<pid>${pid}), method=PLAIN, rip=(?P<rip>${client}), lip=(?P<lip>${client})"
Deliver_Forward = "deliver\((?P<user>${user})\): msgid=(?P<msgid>${msgid})
                   : forwarded to <(?P<mail>${mail})(?:|\.\.\.)>"
Deliver_Save = "deliver\((?P<user>${user})\): msgid=(?P<msgid>${msgid}): saved mail to (?P<folder>.+)"
Deliver_Save_Fail = "deliver\((?P<user>${user})\): msgid=(?P<msgid>${msgid}): save failed to (?P<folder>.+)"
Deliver_Mkdir_Fail = "deliver\((?P<user>${user})\): mkdir\((?P<folder>.+)\) failed: Permission denied"
Deliver_Sieve_Error = "deliver\((?P<user>${user})\): sieve runtime error: (?P<reason>.+)"
Deliver_Sieve_Fail = "deliver\((?P<user>${user})\): sieve_execute_bytecode\(.+\) failed"
Deliver_Discard = "deliver\((?P<user>${user})\): msgid=(?P<msgid>${msgid}): discarded(?P<reason>.*)"
Deliver_Vacation = "deliver\((?P<user>${user})\): msgid=(?P<msgid>${msgid})
                    : sent vacation response to <(?P<mail>${mail})(?:|\.\.\.)>"
IMAP_Failures = ': imap-login: Aborted login \(.*\): user=<(?P<user>${user})>
                 , PID=(?P<thread>(?P<pid>${pid})),\s(\S+), rip=(?P<client>${client}),'
POP3_Failures = ': pop3-login: Aborted login \(.*\): user=<(?P<user>${user})>
                 , PID=(?P<thread>(?P<pid>${pid})),\s(\S+), rip=(?P<client>${client}),'
IMAP_Aborted = ': imap-login: (Disconnected|Aborted login) \(no auth attempts\)
                : PID=(?P<thread>(?P<pid>${pid})), rip=(?P<client>${client}), lip=(?P<lip>${client})'
POP3_Aborted = ': pop3-login: (?:Disconnected(?:|: Inactivity)|Aborted login) \(no auth attempts\)
                : PID=(?P<thread>(?P<pid>${pid})), rip=(?P<client>${client}), lip=(?P<lip>${client})'
IMAP_Max_Conn = ": imap-login: Maximum number of connections from user\+IP exceeded \(
                 mail_max_userip_connections\): user=<(?P<user>${user})>, PID=(?P<pid>${pid})
                 , method=PLAIN, rip=(?P<rip>${client}), lip=(?P<lip>${client}), TLS"
IMAP_Disconnect = ": (imap-login|IMAP\((?P<user>${user})\)): Disconnected(?P<reason>.+)"
POP3_Disconnect = ": POP3\((?P<user>${user})\): Disconnected(?P<reason>.+)"
IMAP_Close = ": IMAP\((?P<user>${user})\): Connection closed"
POP3_Close = ": POP3\((?P<user>${user})\): Connection closed"
Sieve_Login = ": managesieve-login: Login: user=<(?P<user>${mail})>, PID=(?P<pid>${pid}), method=PLAIN
               , rip=(?P<rip>${client}), lip=(?P<lip>${client})"
Sieve_Disconnect = ": MANAGESIEVE\((?P<user>${user})\): Disconnected: Logged out"
Sieve_Close = ": MANAGESIEVE\((?P<user>${user})\): Connection closed"
SSL_Rebuild = ": ssl-build-param: SSL parameters regeneration completed"
IMAP_Panic = ": Panic: IMAP\((?P<user>${user})\): (?P<reason>.+)"
IMAP_Message = ": IMAP\((?P<user>${user})\): (?P<message>.+)"
POP3_Message = ": POP3\((?P<user>${user})\): (?P<message>.+)"
Child_Kill = ": child (?P<pid>${pid}) \(imap\) killed with signal (?P<signal>\d+)"

[user_failures]
subreport = logins_report
title = User Failures
color = red
function = table("Username","Service","Server::client")
IMAP_failures = (user!="\broot\b",user,"imap(dc)",host,client)
POP3_failures = (user!="\broot\b",user,"pop3(dc)",host,client)

[user_logins]
subreport = logins_report
title = User Logins
color = blue
function = table("Username","Service","Server::client")
IMAP_logins = (user!="\broot\b",user,"imap(dc)",host,client)
POP3_logins = (user!="\broot\b",user,"pop3(dc)",host,client)
