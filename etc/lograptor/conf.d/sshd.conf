# "sshd" app configuration for Lograptor

[main]
desc = SSH daemon
tags = sshd
files = ${logdir}/logdir/${hostname}/%Y/%m/secure-%Y%m%d.log* 
enabled = yes
priority = 0

[rules]
User_Logins_PK = "\[(?P<thread>\d+)\]: Accepted publickey for (?P<user>${user}) from (?P<client>${client})"
User_Logins_PW = "\[(?P<thread>\d+)\]: Accepted password for (?P<user>${user}) from (?P<client>${client})"
User_Failures_PK = "\[(?P<thread>\d+)\]: Failed publickey for (?P<user>${user}) from (?P<client>${client})"
User_Failures_PW = "\[(?P<thread>\d+)\]: Failed password for (?P<user>${user}) from (?P<client>${client})"
Connection_Open = "\[(?P<thread>\d+)\]: Connection from (?P<client>${client}) port (?P<port>\d+)"
Connection_Closing = "\[(?P<thread>\d+)\]: Closing connection to (?P<client>${client})"
Connection_Closed = "\[(?P<thread>\d+)\]: Connection closed by (?P<client>${client})"
Session_Open = "\[(?P<thread>\d+)\]: pam_unix\(sshd:session\): session opened for user (?P<user>${user}) by \(uid\=(?P<uid>${uid})\)"
Session_Close = "\[(?P<thread>\d+)\]: pam_unix\(sshd:session\): session closed for user (?P<user>${user})"
Matching_Key = "\[(?P<thread>\d+)\]: Found matching (?P<algorithm>[\w\d-]+) key: (?P<key>(?:[0-9a-f]{2}:)+[0-9a-f]{2})"
Postponed_Key = "\[(?P<thread>\d+)\]: Postponed publickey for (?P<user>${user}) from (?P<client>${client}) port (?P<port>\d+) ssh2"
Disconnect = "\[(?P<thread>\d+)\]: Received disconnect from (?P<client>${client}): (?P<reason>.+)"
Connection_Timed_Out = "\[(?P<thread>\d+)\]: Read error from remote host (?P<client>${client}): Connection timed out"

[root_failures]
subreport = logins_report
title = ROOT FAILURES
color = red
function = table("Hostname","Service","Client")
User_Failures_PK = (user=="\broot\b",host,"sshd(pk)",client)
User_Failures_PW = (user=="\broot\b",host,"sshd(pw)",client)

[root_logins]
subreport = logins_report
title = ROOT Logins
color = blue
function = table("Hostname","Service","Client")
User_Logins_PK = (user=="\broot\b",host,"sshd(pk)",client)
User_Logins_PW = (user=="\broot\b",host,"sshd(pw)",client)

[user_failures]
subreport = logins_report
title = User Failures
color = red
function = table("Username","Service","Server::client")
User_Failures_PK = (user!="\broot\b",user,"sshd(pk)",host,client)
User_Failures_PW = (user!="\broot\b",user,"sshd(pw)",host,client)

[user_logins]
subreport = logins_report
title = User Logins
color = blue
function = table("Username","Service","Server::client")
User_Logins_PK = (user!="\broot\b",user,"sshd(pk)",host,client)
User_Logins_PW = (user!="\broot\b",user,"sshd(pw)",host,client)
